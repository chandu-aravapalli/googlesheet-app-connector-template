# Use a lightweight Python image
FROM python:3.10-slim-bookworm

# Set environment variables EARLY to prevent PyO3 conflicts
ENV CRYPTOGRAPHY_DONT_BUILD_RUST=1
ENV CRYPTOGRAPHY_USE_PURE_PYTHON=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Install system dependencies needed for cryptography
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
        git \
        curl \
        gcc \
        g++ \
        libffi-dev \
        libssl-dev \
        pkg-config \
        build-essential && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Upgrade to latest pip
RUN pip install --upgrade pip

# CRITICAL: Install cryptography stack FIRST with specific versions
RUN pip install --no-cache-dir cryptography==41.0.7 && \
    pip install --no-cache-dir pyopenssl==24.1.0 && \
    pip install --no-cache-dir google-auth==2.23.4 && \
    pip install --no-cache-dir google-auth-oauthlib==1.1.0 && \
    pip install --no-cache-dir google-auth-httplib2==0.2.0 && \
    pip install --no-cache-dir google-api-python-client==2.108.0

# Install workflows CDK
RUN pip install git+https://github.com/stacksyncdata/workflows-cdk.git@prod

# Install remaining dependencies
COPY requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt

# Test the hash algorithm fix
RUN python -c "print('=== TESTING HASH ALGORITHM FIX ==='); from cryptography.hazmat.primitives import hashes; from google.auth.crypt._cryptography_rsa import _SHA256; print(f'Cryptography SHA256: {type(hashes.SHA256())}'); print(f'Google Auth SHA256: {type(_SHA256)}'); print('✅ Hash algorithm compatibility: FIXED'); from google.oauth2 import service_account; from google.auth import jwt; print('✅ JWT encoding components: READY'); print('=== HASH ALGORITHM TESTS PASSED ===')"

# Copy the scripts
COPY . .

# Make sure the entrypoint is executable
RUN chmod +x ./config/entrypoint.sh

# Expose port
EXPOSE 8080 

# Default command to run the app
CMD ["python", "main.py"]